version: '3.8'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ~/nginx-proxy/certs:/etc/nginx/certs
      - ~/nginx-proxy/vhost.d:/etc/nginx/vhost.d
      - ~/nginx-proxy/html:/usr/share/nginx/html
      - ~/nginx-proxy/conf.d:/etc/nginx/conf.d
    networks:
      - nginx-proxy
      - lighthouse
    restart: always

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ~/nginx-proxy/acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=din_email@exempel.com
    networks:
      - nginx-proxy
    depends_on:
      - nginx-proxy
    restart: always

  postgres:
    image: postgres:latest
    container_name: lh-postgres-1
    restart: always
    networks:
      - lighthouse
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
      - ./backend/postgres/init/db_schemas.sql:/docker-entrypoint-initdb.d/db_schemas.sql
      - ./backend/postgres/init/01-init-db.sh:/docker-entrypoint-initdb.d/01-init-db.sh
      - ./backend/postgres/init/insert_models.sql:/docker-entrypoint-initdb.d/insert_models.sql

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: lh-pgadmin-1
    restart: always
    networks:
      - lighthouse
      - nginx-proxy
    expose:
      - "80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - MAX_LOGIN_ATTEMPTS=0
      - VIRTUAL_HOST=pgadmin.103.177.249.100
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=pgadmin.103.177.249.100
    depends_on:
      - postgres
    volumes:
      - ${PGADMIN_DATA_PATH}:/var/lib/pgadmin

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lh-backend-1
    restart: always
    networks:
      - lighthouse
      - nginx-proxy
    expose:
      - "5001"
    environment:
      - DATA_DIR=/app/data
      - FRONTEND_URL=${FRONTEND_URL}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_PORT=${DB_PORT}
      - SERVER_URL=${SERVER_URL}
      - VIRTUAL_HOST=api.103.177.249.100
      - VIRTUAL_PORT=5001
      - LETSENCRYPT_HOST=api.103.177.249.100
    volumes:
      - ./backend/app/ragas/test_cases:/app/app/ragas/test_cases
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lh-frontend-1
    restart: always
    networks:
      - lighthouse
      - nginx-proxy
    expose:
      - "3000"
    environment:
      - NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL}
      - VIRTUAL_HOST=103.177.249.100
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=103.177.249.100
    depends_on:
      - backend

networks:
  nginx-proxy:
    external: true
  lighthouse:
    driver: bridge
